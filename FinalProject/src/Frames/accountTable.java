/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frames;

import Clases.Clientes;
import Clases.Conectar;
import Clases.Modelos;
import Clases.Monedas;

import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author marcelo
 */


public class accountTable extends javax.swing.JFrame {
        int xMouse,yMouse;

        
    /**
     * Creates new form accountTable
     */
    public accountTable() {
        initComponents();
        this.setLocationRelativeTo(null);
        limpiar();
        llenarClientes();
        llenarMonedas();
        mostrarTabla("");
    }
    
    void limpiar(){
        idAccountTxt.setText("");
        numberAccountTxt.setText("");
        passAccountTxt.setText("");
        cbxCliente.removeAllItems();
        cbxMoneda.removeAllItems();
    }
    
    void mostrarTabla(String valor){
        
        DefaultTableModel modelo=new DefaultTableModel();
        
        modelo.addColumn("Id");
        modelo.addColumn("Numero");
        modelo.addColumn("Clave");
        modelo.addColumn("Cliente");
        modelo.addColumn("Moneda");
        table.setModel(modelo);
        

        //String sql="SELECT id_cuenta , numero_cuenta , clave_cuenta , cliente.nombre_cliente ,moneda.nombre_moneda FROM cuenta INNER JOIN cliente ON cliente.id_cliente= cuenta.id_cliente INNER JOIN moneda ON moneda.id_moneda= cuenta.id_cuenta";
        String sql="SELECT * FROM cuenta";
        
        
        String datos[]=new String[5];

        Statement st;
        
        try {
            st= cn.createStatement();

            ResultSet rs=st.executeQuery(sql);
            
            while(rs.next()){
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);

                
                modelo.addRow(datos);
            }

            table.setModel(modelo);
            
        } catch (SQLException e) {
            
            System.err.println("Error en el llamado de la tabla... "+e);
            
            JOptionPane.showMessageDialog(null,"Error en el llamado de la tabla");
            
        }
    }
    
    
    private void llenarClientes(){
        Modelos mod= new Modelos();
        ArrayList<Clientes> listaClientes = mod.getclientes();
        
        cbxCliente.removeAllItems();
        
        for (int i = 0; i < listaClientes.size(); i++) {
            
            cbxCliente.addItem(new Clientes(listaClientes.get(i).getId_cliente(),listaClientes.get(i).getNombre_cliente(), listaClientes.get(i).getApellido_cliente()));
            
        }
    }
    
    private void llenarMonedas(){
        Modelos mod= new Modelos();
        ArrayList<Monedas> listaMonedas = mod.getMonedas();
        
        cbxMoneda.removeAllItems();
        
        for (int i = 0; i < listaMonedas.size(); i++) {
            
            cbxMoneda.addItem(new Monedas(listaMonedas.get(i).getId_moneda(),listaMonedas.get(i).getNombre_moneda()));
            
        }
    }
    


    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        background = new javax.swing.JPanel();
        closeButton = new javax.swing.JPanel();
        closeText = new javax.swing.JLabel();
        backButton = new javax.swing.JPanel();
        backText = new javax.swing.JLabel();
        barra = new javax.swing.JPanel();
        entrry = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        cleanTxt = new javax.swing.JButton();
        deleteTxt = new javax.swing.JButton();
        updateTxt = new javax.swing.JButton();
        idLabel = new javax.swing.JLabel();
        idAccountTxt = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        numberAccountTxt = new javax.swing.JTextField();
        numberLabel = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        passAccountTxt = new javax.swing.JTextField();
        passLabel = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        passLabel1 = new javax.swing.JLabel();
        cbxCliente = new javax.swing.JComboBox<>();
        jSeparator5 = new javax.swing.JSeparator();
        coinLabel = new javax.swing.JLabel();
        cbxMoneda = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        background.setBackground(new java.awt.Color(0, 134, 190));
        background.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        closeButton.setBackground(new java.awt.Color(255, 255, 255));
        closeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                closeButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                closeButtonMouseExited(evt);
            }
        });

        closeText.setFont(new java.awt.Font("Noto Mono", 3, 24)); // NOI18N
        closeText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        closeText.setText("x");
        closeText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeTextMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                closeTextMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                closeTextMouseExited(evt);
            }
        });

        javax.swing.GroupLayout closeButtonLayout = new javax.swing.GroupLayout(closeButton);
        closeButton.setLayout(closeButtonLayout);
        closeButtonLayout.setHorizontalGroup(
            closeButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(closeButtonLayout.createSequentialGroup()
                .addComponent(closeText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
        );
        closeButtonLayout.setVerticalGroup(
            closeButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(closeButtonLayout.createSequentialGroup()
                .addComponent(closeText)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        background.add(closeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 30, 30));

        backButton.setBackground(new java.awt.Color(255, 255, 255));
        backButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backButtonMouseClicked(evt);
            }
        });

        backText.setFont(new java.awt.Font("Noto Mono", 3, 18)); // NOI18N
        backText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        backText.setText("<--");
        backText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backTextMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backTextMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backTextMouseExited(evt);
            }
        });

        javax.swing.GroupLayout backButtonLayout = new javax.swing.GroupLayout(backButton);
        backButton.setLayout(backButtonLayout);
        backButtonLayout.setHorizontalGroup(
            backButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
            .addGroup(backButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(backText, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
        );
        backButtonLayout.setVerticalGroup(
            backButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
            .addGroup(backButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(backText, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
        );

        background.add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 40, 30));

        barra.setBackground(new java.awt.Color(255, 255, 255));
        barra.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                barraMouseDragged(evt);
            }
        });
        barra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                barraMousePressed(evt);
            }
        });

        javax.swing.GroupLayout barraLayout = new javax.swing.GroupLayout(barra);
        barra.setLayout(barraLayout);
        barraLayout.setHorizontalGroup(
            barraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 660, Short.MAX_VALUE)
        );
        barraLayout.setVerticalGroup(
            barraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        background.add(barra, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 0, 660, 30));

        entrry.setBackground(new java.awt.Color(255, 255, 255));

        titleLabel.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Registro de Cuentas");

        cleanTxt.setBackground(new java.awt.Color(0, 134, 190));
        cleanTxt.setForeground(new java.awt.Color(255, 255, 255));
        cleanTxt.setText("Actualizar");
        cleanTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cleanTxtActionPerformed(evt);
            }
        });

        deleteTxt.setBackground(new java.awt.Color(0, 134, 190));
        deleteTxt.setForeground(new java.awt.Color(255, 255, 255));
        deleteTxt.setText("Eliminar");
        deleteTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteTxtActionPerformed(evt);
            }
        });

        updateTxt.setBackground(new java.awt.Color(0, 134, 190));
        updateTxt.setForeground(new java.awt.Color(255, 255, 255));
        updateTxt.setText("Guardar");
        updateTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateTxtActionPerformed(evt);
            }
        });

        idLabel.setText("id:");

        idAccountTxt.setEditable(false);
        idAccountTxt.setBorder(null);

        numberAccountTxt.setBorder(null);

        numberLabel.setText("numero de cuenta:");

        passAccountTxt.setBorder(null);

        passLabel.setText("Clave de cuenta:");

        passLabel1.setText("Cliente");

        cbxCliente.setBorder(null);

        coinLabel.setText("Moneda");

        cbxMoneda.setBorder(null);

        javax.swing.GroupLayout entrryLayout = new javax.swing.GroupLayout(entrry);
        entrry.setLayout(entrryLayout);
        entrryLayout.setHorizontalGroup(
            entrryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titleLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(entrryLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(entrryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(entrryLayout.createSequentialGroup()
                        .addGroup(entrryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, entrryLayout.createSequentialGroup()
                                .addComponent(cleanTxt)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(updateTxt)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deleteTxt))
                            .addGroup(entrryLayout.createSequentialGroup()
                                .addComponent(idLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(idAccountTxt))
                            .addComponent(jSeparator2)
                            .addGroup(entrryLayout.createSequentialGroup()
                                .addComponent(numberLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(numberAccountTxt))
                            .addComponent(jSeparator4)
                            .addGroup(entrryLayout.createSequentialGroup()
                                .addComponent(passLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbxCliente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(18, 18, 18))
                    .addGroup(entrryLayout.createSequentialGroup()
                        .addGroup(entrryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator3)
                            .addGroup(entrryLayout.createSequentialGroup()
                                .addComponent(passLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(passAccountTxt)))
                        .addContainerGap())
                    .addComponent(jSeparator5)
                    .addGroup(entrryLayout.createSequentialGroup()
                        .addComponent(coinLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxMoneda, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        entrryLayout.setVerticalGroup(
            entrryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(entrryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(entrryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idLabel)
                    .addComponent(idAccountTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(entrryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numberLabel)
                    .addComponent(numberAccountTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(entrryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passLabel)
                    .addComponent(passAccountTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(entrryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passLabel1)
                    .addComponent(cbxCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(entrryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(coinLabel)
                    .addComponent(cbxMoneda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(entrryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteTxt)
                    .addComponent(updateTxt)
                    .addComponent(cleanTxt))
                .addContainerGap())
        );

        background.add(entrry, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 270, 300));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table.setToolTipText("");
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        background.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 40, 430, 300));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, 732, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(background, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeTextMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_closeTextMouseClicked

    private void closeTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeTextMouseEntered
        // TODO add your handling code here:
        closeButton.setBackground(Color.red);
        closeText.setForeground(Color.white);
    }//GEN-LAST:event_closeTextMouseEntered

    private void closeTextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeTextMouseExited
        // TODO add your handling code here:
        closeButton.setBackground(Color.white);
        closeText.setForeground(Color.black);
    }//GEN-LAST:event_closeTextMouseExited

    private void closeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeButtonMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_closeButtonMouseClicked

    private void closeButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeButtonMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_closeButtonMouseEntered

    private void closeButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeButtonMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_closeButtonMouseExited

    private void backTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backTextMouseClicked
        // TODO add your handling code here:
        Principal principal=new Principal();
        principal.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backTextMouseClicked

    private void backTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backTextMouseEntered
        // TODO add your handling code here:
        backButton.setBackground(Color.red);
        backText.setForeground(Color.white);
    }//GEN-LAST:event_backTextMouseEntered

    private void backTextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backTextMouseExited
        // TODO add your handling code here:
        backButton.setBackground(Color.white);
        backText.setForeground(Color.black);
    }//GEN-LAST:event_backTextMouseExited

    private void backButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_backButtonMouseClicked

    private void barraMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_barraMouseDragged
        // TODO add your handling code here:
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_barraMouseDragged

    private void barraMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_barraMousePressed
        // TODO add your handling code here:
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_barraMousePressed

    private void deleteTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteTxtActionPerformed
        // TODO add your handling code here:
        int eleccion = JOptionPane.showConfirmDialog(null, "¿Está seguro que desea eliminar este registro?");
            if (eleccion==JOptionPane.YES_OPTION) {
                try {
                    PreparedStatement ps=cn.prepareStatement ("DELETE FROM cuenta WHERE id_cuenta='"+idAccountTxt.getText()+"'");
                    int respuesta=ps.executeUpdate();
                    if (respuesta>0) {
                        
                        JOptionPane.showMessageDialog(null, "Registro Eliminado");
                        mostrarTabla("");

                    } else {

                        JOptionPane.showMessageDialog(null, "No ha seleccionado el registro");

                    }

                    } catch (SQLException e) {
            
            System.err.println("Error al eliminar... "+e);
            JOptionPane.showMessageDialog(null, "Error al eliminar");
            
        }      
            } else {
                    
                    JOptionPane.showMessageDialog(null, "la operación fue cancelada");
                    mostrarTabla("");
                    
                }
    }//GEN-LAST:event_deleteTxtActionPerformed

    private void updateTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateTxtActionPerformed

        
        int clien=cbxCliente.getItemAt(cbxCliente.getSelectedIndex()).getId_cliente();
        int mon=cbxMoneda.getItemAt(cbxMoneda.getSelectedIndex()).getId_moneda();

        
        String clienS= ""+clien;
        String monS= ""+mon;
        System.out.println(""+monS+clienS);
        
        try {
            PreparedStatement ps=cn.prepareStatement("INSERT INTO cuenta (numero_cuenta ,clave_cuenta,id_cliente,id_moneda)VALUES  (?,?,?,?)");                             
            
            
            System.out.println(clien+" "+mon);
            
            ps.setString(1,numberAccountTxt.getText() );
            ps.setString(2,passAccountTxt.getText() );
            ps.setString(3,clienS);
            ps.setString(4,monS);

            
            ps.executeUpdate();
            
            limpiar();
            llenarClientes();
            llenarMonedas();
            mostrarTabla("");
            JOptionPane.showMessageDialog(null,"Se guardo correctamente");
            
        } catch (Exception e) {
            
            System.err.println("Error al guardar..."+e);
            JOptionPane.showMessageDialog(null,"Error al guardar");
            
        }


    }//GEN-LAST:event_updateTxtActionPerformed

    private void cleanTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cleanTxtActionPerformed
        // TODO add your handling code here:
        
        
         try {    
                PreparedStatement ps=cn.prepareStatement ("UPDATE cuenta SET numero_cuenta='"+numberAccountTxt.getText()+"',clave_cuenta='"+passAccountTxt.getText()+"' where id_cuenta='"+idAccountTxt.getText()+"'");

                int respuesta=ps.executeUpdate();
            
                if (respuesta>0){
                    JOptionPane.showMessageDialog(null,"Datos acutalizados");
                    limpiar();
                    llenarClientes();
                    llenarMonedas();
                    mostrarTabla("");
                 }else{
                    JOptionPane.showMessageDialog(null,"No selecciono la fila");
                }
                } catch (SQLException e) {
                    System.err.println("Error al actualizar... "+e);
                    JOptionPane.showMessageDialog(null,"Error al actualizar");   
        }
        
    }//GEN-LAST:event_cleanTxtActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:
        int fila=this.table.getSelectedRow();
        
        this.idAccountTxt.setText(this.table.getValueAt(fila,0).toString());
        this.numberAccountTxt.setText(this.table.getValueAt(fila,1).toString());
        this.passAccountTxt.setText(this.table.getValueAt(fila,2).toString());
        this.cbxCliente.setEditable(false);
        this.cbxMoneda.setEditable(false);

    }//GEN-LAST:event_tableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(accountTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(accountTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(accountTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(accountTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new accountTable().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backButton;
    private javax.swing.JLabel backText;
    private javax.swing.JPanel background;
    private javax.swing.JPanel barra;
    private javax.swing.JComboBox<Clientes> cbxCliente;
    private javax.swing.JComboBox<Monedas> cbxMoneda;
    private javax.swing.JButton cleanTxt;
    private javax.swing.JPanel closeButton;
    private javax.swing.JLabel closeText;
    private javax.swing.JLabel coinLabel;
    private javax.swing.JButton deleteTxt;
    private javax.swing.JPanel entrry;
    private javax.swing.JTextField idAccountTxt;
    private javax.swing.JLabel idLabel;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTextField numberAccountTxt;
    private javax.swing.JLabel numberLabel;
    private javax.swing.JTextField passAccountTxt;
    private javax.swing.JLabel passLabel;
    private javax.swing.JLabel passLabel1;
    private javax.swing.JTable table;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JButton updateTxt;
    // End of variables declaration//GEN-END:variables
    Conectar con=new Conectar();
    Connection cn=con.conexion();

}
